---
import FormattedDate from "@components/FormattedDate.astro";
import SliceList from "@components/SliceList.astro";
import Tag from "@components/Tag.astro";
import TagCloud from "@components/TagCloud.astro";
import Tocbar from "@components/Tocbar.astro";
import ValineComm from "@components/ValineComm.astro";
import { config } from "@config";
import type { CollectionEntry } from "astro:content";
import DefaultLayout from "./DefaultLayout.astro";

interface Props {
  entry: CollectionEntry<"blog">;
}
const { entry } = Astro.props;
const { headings } = await entry.render();

const { title, description, pubDate, author, heroImage, tags, categories } =
  entry.data;
---

<DefaultLayout
  title={title}
  description={description ? description : entry.body.substring(0, 150)}
  keyword={`${tags.join(",")},${categories.join(",")}`}
>
  <div
    class="min-h-screen flex lg:flex-row flex-col justify-between items-start w-full"
  >
    <input
      id="sidebar-toggle"
      role="checkbox"
      class="hidden"
      type="checkbox"
      aria-label="打开侧边栏 open sidebar "
    />
    <label for="sidebar-toggle" class="sidebar-toggle-button">
        <span class="bar"></span>
        <span class="bar"></span>
        <span class="bar"></span>
    </label>
    <aside
      id="sidebar"
      class="flex flex-col order-2 justify-start items-center basis-full lg:basis-1/3 lg:pl-2 lg:sticky lg:top-20 theme"
    >

      <TagCloud />
      <Tocbar headings={headings} title={title} />
      <SliceList title="相关文章" entry={entry} />
    </aside>

    <div
      class="flex flex-col order-1 justify-start items-center flex-auto w-full lg:relative min-h-screen lg:overflow-y-auto"
    >
      <article
        class="w-full p-5 prose-base lg:prose-lg
              prose-h1:font-bold
            prose-a:text-blue-500
            hover:prose-a:text-purple-500
              prose-p:text-justify
              prose-img:rounded-md
              prose-img:m-auto
              prose-headings:underline
              dark:prose-invert"
      >
        <h1>{title}</h1>
        <div
          class="flex justify-start items-baseline space-x-1 text-zinc-500 text-sm"
        >
          <span>{author}</span>
          <span>发布于</span>
          <FormattedDate date={pubDate} />
          {
            tags.map((tag) => (
              <a href={`/tags/${tag}`}>
                <Tag tag={tag} />
              </a>
            ))
          }
        </div>
        {
          heroImage && (
            <figure id="heroImage" class="w-auto h-full min-w-28 min-h-20">
              <img
                src={heroImage}
                alt={title}
                loading="lazy"
                class="object-contain rounded-md"
              />
            </figure>
          )
        }
        <slot />
      </article>

      {config.valine.enable && <ValineComm valine={config.valine} />}
    </div>
  </div>
</DefaultLayout>
<style>
#sidebar {
  @apply max-lg:fixed max-lg:top-0 max-lg:z-10 max-lg:pointer-events-none max-lg:-right-full max-lg:h-full max-lg:w-full max-lg:break-all  max-lg:overflow-y-auto max-lg:overflow-x-hidden;
}

#sidebar-toggle:checked ~ #sidebar {
  right: 0; /* 显示侧边栏 */
}

/* CSS样式 */
.sidebar-toggle-button {  
  @apply fixed z-50 top-3.5 right-2 lg:hidden
}

.bar {
  display: block;
  width: 25px;
  height: 3px;
  margin: 3px auto;
  background-color: #333;
  transition: transform 0.3s ease;
}

#sidebar-toggle:checked ~ .sidebar-toggle-button .bar:nth-child(1) {
  transform: translateY(6px) rotate(-45deg);
}
  
#sidebar-toggle:checked ~ .sidebar-toggle-button .bar:nth-child(2) {
  opacity: 0;
}

#sidebar-toggle:checked ~ .sidebar-toggle-button .bar:nth-child(3) {
  transform: translateY(-6px) rotate(45deg);
}
</style>