---
import FormattedDate from "@components/FormattedDate.astro";
import SliceList from "@components/SliceList.astro";
import TagCloud from "@components/TagCloud.astro";
import Tocbar from "@components/Tocbar.astro";
import ValineComm from "@components/ValineComm.astro";
import { config } from "@assets/ts/consts";
import type { CollectionEntry } from "astro:content";
import DefaultLayout from "./DefaultLayout.astro";
import Prose from "@components/Prose.astro";
import SectionItem from "@components/SectionItem.astro";
import GiscusComm from "@components/GiscusComm.astro";

interface Props {
  entry: CollectionEntry<"blog">;
}
const { entry } = Astro.props;
const { headings } = await entry.render();

const { title, description, pubDate, author, tags, categories } = entry.data;
---

<DefaultLayout
  title={title}
  description={description ? description : entry.body.substring(0, 10)}
  keyword={`${tags.join(",")},${categories.join(",")}`}>
  <div class='min-h-screen flex lg:flex-row flex-col justify-between items-start w-full'>
    <div class='flex flex-col justify-start items-center flex-auto w-full lg:relative min-h-screen'>
      <SectionItem>
        <Prose
          ><h1 id='header-title'>{title}</h1>
          <div
            class='flex justify-start items-baseline space-x-1 text-sm text-primary-dark/70 dark:text-primary-light/70'>
            <span>{author}</span>
            <span>发布于</span>
            <FormattedDate date={pubDate} />
            {
              tags.map((tag) => (
                <a href={`/tags/${tag}`}>
                  <span class='tag'>#{tag}</span>
                </a>
              ))
            }
            <!-- id 将作为查询条件 -->
            {
              config.valine.enable && (
                <span
                  id={`${new URL(`blog/${entry.slug}`, Astro.site)}`}
                  class='leancloud_visitors'
                  data-flag-title={entry.data.title}>
                  <em>阅读量</em>
                  <i class='leancloud-visitors-count' />
                </span>
              )
            }
          </div>
          <slot />
        </Prose>
      </SectionItem>

      {config.valine.enable && <ValineComm />}
      {config.giscus.enable && <GiscusComm />}
      <SliceList
        title='相关文章'
        entry={entry}
      />
    </div>
    <input
      id='sidebar-toggle'
      role='checkbox'
      class='hidden'
      type='checkbox'
      aria-label='打开侧边栏 open sidebar '
    />
    <label
      for='sidebar-toggle'
      class='sidebar-toggle-button'>
      <span class='bar'></span>
      <span class='bar'></span>
      <span class='bar'></span>
    </label>
    <label
      id='mask'
      for='sidebar-toggle'
      class='fixed top-0 left-0 z-10 bg-primary-dark/50 cursor-pointer w-screen h-screen hidden'>
    </label>
    <aside
      id='sidebar'
      class='flex flex-col justify-start items-center lg:min-h-screen lg:basis-1/3 lg:ml-5 lg:sticky lg:top-28'>
      <TagCloud />
      <Tocbar
        headings={headings}
        title={title}
      />
    </aside>
  </div>
</DefaultLayout>
<style>
  #sidebar {
    @apply max-lg:fixed max-lg:top-28 max-lg:z-20  max-lg:px-1
    max-lg:-right-full max-lg:max-h-[50vh]  
    max-lg:w-[70vw] max-lg:break-all  
    max-lg:overflow-y-auto max-lg:overflow-x-hidden max-lg:dark:bg-primary-dark  max-lg:bg-primary-light;
  }

  #sidebar-toggle:checked ~ #sidebar {
    @apply right-0 transition-all duration-300 ease-in-out;
  }
  #sidebar-toggle:checked ~ #mask {
    @apply block;
  }

  .sidebar-toggle-button {
    @apply fixed z-50 top-32 right-2 lg:hidden;
  }

  .bar {
    @apply block w-6 h-0.5 mx-auto my-1 transition-all duration-300 ease-in-out bg-primary-dark dark:bg-primary-light;
  }

  #sidebar-toggle:checked ~ .sidebar-toggle-button .bar:nth-child(1) {
    transform: translateY(6px) rotate(-45deg);
  }

  #sidebar-toggle:checked ~ .sidebar-toggle-button .bar:nth-child(2) {
    opacity: 0;
  }

  #sidebar-toggle:checked ~ .sidebar-toggle-button .bar:nth-child(3) {
    transform: translateY(-6px) rotate(45deg);
  }
</style>
