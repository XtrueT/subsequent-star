---
import FormattedDate from '@components/star/FormattedDate.astro';
import SliceList from '@components/star/SliceList.astro';
import TagCloud from '@components/star/TagCloud.astro';
import Tocbar from '@components/star/Tocbar.astro';
import ValineComm from '@components/external/ValineComm.astro';
import { config } from '@assets/ts/consts';
import type { CollectionEntry } from 'astro:content';
import DefaultLayout from './DefaultLayout.astro';
import Prose from '@components/star/Prose.astro';
import SectionItem from '@components/star/SectionItem.astro';
import GiscusComm from '@components/external/GiscusComm.astro';
import Card from '@components/star/Card.astro';
import CardHeader from '@components/star/CardHeader.astro';

interface Props {
  entry: CollectionEntry<'blog'>;
}
const { entry } = Astro.props;
const { headings } = await entry.render();

const { title, description, pubDate, author, tags, categories } = entry.data;
---

<DefaultLayout
  title={title}
  description={description ? description : entry.body.substring(0, 10)}
  keyword={`${tags.join(',')},${categories.join(',')}`}>
  <div class='min-h-screen grid grid-cols-3 gap-5 justify-between items-start w-full'>
    <div
      class='col-span-full lg:col-span-2 grid grid-cols-1 gap-5 justify-start items-center flex-auto w-full lg:relative min-h-screen'>
      <SectionItem>
        <Prose>
          <h1 id='header-title'>{title}</h1>
          <div class='flex justify-start items-baseline space-x-1 text-sm text-gray-500'>
            <span>{author}</span>
            <span>发布于</span>
            <FormattedDate date={pubDate} />
            {
              tags.map((tag) => (
                <a href={`/tags/${tag}`}>
                  <span class='tag'>#{tag}</span>
                </a>
              ))
            }
            <!-- id 将作为查询条件 -->
            {
              config.valine.enable && (
                <span
                  id={`${new URL(`blog/${entry.slug}`, Astro.site)}`}
                  class='leancloud_visitors'
                  data-flag-title={entry.data.title}>
                  <em>阅读量</em>
                  <i class='leancloud-visitors-count' />
                </span>
              )
            }
          </div>
          <slot />
        </Prose>
      </SectionItem>

      {config.valine.enable && <ValineComm />}
      {config.giscus.enable && <GiscusComm />}
      <SliceList title='相关文章' entry={entry} />
    </div>
    <input
      id='sidebar-toggle'
      role='checkbox'
      class='hidden'
      type='checkbox'
      aria-label='打开侧边栏 open sidebar '
    />
    <label for='sidebar-toggle' class='sidebar-toggle-button'>
      <span class='bar'></span>
      <span class='bar'></span>
      <span class='bar'></span>
    </label>
    <label
      id='mask'
      for='sidebar-toggle'
      class='fixed top-0 left-0 z-10 dark:bg-site-dark/80 bg-site-light/80 cursor-pointer w-screen h-screen hidden'>
    </label>
    <aside id='sidebar' class='flex flex-col gap-2 items-start lg:min-h-screen lg:sticky lg:top-28'>
      <Card>
        <CardHeader title='标签' />
        <TagCloud />
      </Card>
      <Card>
        <CardHeader title='目录' />
        <Tocbar headings={headings} title={title} />
      </Card>
    </aside>
  </div>
</DefaultLayout>
<style>
  #sidebar {
    @apply max-lg:fixed max-lg:-right-full max-lg:top-28 max-lg:z-20 max-lg:max-h-[70vh] max-lg:w-[70vw] max-lg:overflow-y-auto max-lg:overflow-x-hidden max-lg:break-all max-lg:bg-site-light max-lg:px-1 max-lg:dark:bg-site-dark;
  }

  #sidebar-toggle:checked ~ #sidebar {
    @apply right-0 transition-all duration-300 ease-in-out;
  }
  #sidebar-toggle:checked ~ #mask {
    @apply block;
  }

  .sidebar-toggle-button {
    @apply fixed right-5 top-28 z-50 lg:hidden;
  }

  .bar {
    @apply mx-auto my-1 block h-0.5 w-6 bg-site-dark transition-all duration-300 ease-in-out dark:bg-site-light;
  }

  #sidebar-toggle:checked ~ .sidebar-toggle-button .bar:nth-child(1) {
    transform: translateY(6px) rotate(-45deg);
  }

  #sidebar-toggle:checked ~ .sidebar-toggle-button .bar:nth-child(2) {
    opacity: 0;
  }

  #sidebar-toggle:checked ~ .sidebar-toggle-button .bar:nth-child(3) {
    transform: translateY(-6px) rotate(45deg);
  }
</style>
