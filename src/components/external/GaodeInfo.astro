---
import Card from '../star/Card.astro';
import CardHeader from '../star/CardHeader.astro';
---

<Card>
  <CardHeader title='实况天气'>
    <button id='getGaodeInfo'>
      <svg
        xmlns='http://www.w3.org/2000/svg'
        width='24'
        height='24'
        class='size-6 fill-gray-500'
        viewBox='0 0 24 24'>
        <path
          fill='current'
          d='M12 20q-3.35 0-5.675-2.325T4 12t2.325-5.675T12 4q1.725 0 3.3.712T18 6.75V5q0-.425.288-.712T19 4t.713.288T20 5v5q0 .425-.288.713T19 11h-5q-.425 0-.712-.288T13 10t.288-.712T14 9h3.2q-.8-1.4-2.187-2.2T12 6Q9.5 6 7.75 7.75T6 12t1.75 4.25T12 18q1.7 0 3.113-.862t2.187-2.313q.2-.35.563-.487t.737-.013q.4.125.575.525t-.025.75q-1.025 2-2.925 3.2T12 20'>
        </path>
      </svg>
    </button>
  </CardHeader>

  <ul class='flex flex-col space-y-2'>
    <li class='text-primary-light dark:text-primary-dark'>
      <span class='text-3xl' id='weather'></span><span class='text-2xl ml-2' id='temperature'>
      </span>°C
    </li>
    <li>
      <span class='text-2xl' id='province'></span><span class='text-2xl ml-2' id='city'></span>
    </li>
    <li>
      风向：<span id='winddirection'></span><span class='ml-2' id='windpower'></span> 空气湿度：<span
        class='ml-2'
        id='humidity'>
      </span>%
    </li>
    <li class='report-time'>更新时间：<span id='reporttime'></span></li>
  </ul>
</Card>

<script>
  import { gaodeApi } from '@assets/ts/consts';

  async function getGaodeApiData(
    url,
    sessionStorageKey,
    isCache = true,
    cacheTime = 1000 * 60 * 60 * 24
  ) {
    let results: any;
    const cachedData = isCache ? sessionStorage.getItem(sessionStorageKey) : null;
    if (cachedData) {
      // 解析缓存数据
      const parsedData = JSON.parse(cachedData);
      // 检查数据是否已过期
      const now = new Date().getTime();
      const expirationTime = parsedData.expirationTime || now;
      if (now < expirationTime) {
        results = parsedData.data;
      }
    }
    if (!results) {
      const content = await fetch(url);
      const { ...data } = await content.json();
      if (isCache) {
        // 设置数据的有效期
        const expirationTime = new Date(Date.now() + cacheTime).getTime(); // 设置有效期为 24 小时
        // 更新缓存数据并存储
        const updatedData = {
          data,
          expirationTime: expirationTime
        };
        sessionStorage.setItem(sessionStorageKey, JSON.stringify(updatedData));
      }
      results = data;
    }
    return results;
  }

  function renderGaodeInfo(data) {
    for (let key in data) {
      if (data.hasOwnProperty(key)) {
        const element = document.getElementById(key);
        if (element) {
          element.textContent = data[key];
        }
      }
    }
  }

  function getInfo() {
    const ipUrl = `${gaodeApi.ip}?output=json&key=${gaodeApi.key}`;

    getGaodeApiData(ipUrl, gaodeApi.ip).then((results) => {
      const weatherUrl = `${gaodeApi.weather}?city=${results.adcode}&key=${gaodeApi.key}`;
      // 缓存30分钟
      getGaodeApiData(weatherUrl, gaodeApi.weather, true, 1000 * 60 * 30).then((results) => {
        renderGaodeInfo(results.lives[0]);
      });
    });
  }
  document.addEventListener('astro:page-load', () => {
    document.getElementById('getGaodeInfo')?.addEventListener('click', () => {
      document.getElementById('getGaodeInfo')?.classList.add('animate-spin');
      setTimeout(() => {
        getInfo();
        document.getElementById('getGaodeInfo')?.classList.remove('animate-spin');
      }, 1000);
    });
    // 初始化显示
    getInfo();
    setInterval(getInfo, 1000 * 60 * 30);
  });
</script>
