---
import SectionItem from "./SectionItem.astro";
import TocLink from "./TocLink.astro";

interface Props {
  headings: {
    depth: number;
    slug: string;
    text: string;
  }[];
  title: string;
}

const { headings, title } = Astro.props;

const generateToc = (headings: any[]) => {
  const toc: any[] = [];
  const parentHeadings = new Map();
  let minDepth = Number.MAX_SAFE_INTEGER;
  for (const heading of headings) {
    if (heading.depth < minDepth) {
      minDepth = heading.depth;
    }
  }
  for (const heading of headings) {
    const sub: any[] = [];
    const { depth } = heading;
    const currentHeading = { ...heading, sub };
    parentHeadings.set(depth, currentHeading);
    if (depth === minDepth || depth === 2) {
      toc.push(currentHeading);
    } else {
      const parentHeading = parentHeadings.get(depth - 1);
      parentHeading
        ? parentHeading.sub.push(currentHeading)
        : toc.push(currentHeading);
    }
  }
  return toc;
};
---

{
  headings.length > 0 && (
    <SectionItem title="文章目录">
      <nav class="w-full">
        <h2>{title}</h2>
        <hr/>
        <ul id="tocList" class="max-h-[50vh] h-full overflow-y-auto">
          {generateToc(headings).map((heading) => (
            <TocLink heading={heading} />
          ))}
        </ul>
      </nav>
    </SectionItem>
  )
}

<script>
  // JavaScript 逻辑
  function scrollToAnchor(link) {
    const href = link.getAttribute("href");
    const targetElement = document.getElementById(href.substring(1));
    if (targetElement) {
      targetElement.scrollIntoView({
        behavior: "smooth",
        block: "center",
        inline: "nearest",
      });
    }
  }

  function setupTocLinkObserver() {
    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          const link = document.querySelector(
            `.toc-link[href="#${entry.target.id}"]`
          );
          if (link) {
            link.classList.toggle("active", entry.isIntersecting);
            // if (link.classList.contains("active")) {
            //   link.scrollIntoView({});
            // }
          }
        });
      },
      {
        root: null, // 相对于视口观察
        rootMargin: "-5% 0px -5% 0px",
        threshold: 0.1, // 元素与视口交叉的阈值
      }
    );

    // 为每个锚点设置观察器
    document.querySelectorAll(".toc-link").forEach((link) => {
      const href = link.getAttribute("href") || "";
      const targetElement = document.getElementById(href.substring(1));
      if (targetElement) {
        observer.observe(targetElement);
      }
    });
  }

  document.addEventListener("astro:page-load", function () {
    setupTocLinkObserver();
    document.querySelectorAll(".toc-link").forEach((link) =>
      link.addEventListener("click", (event) => {
        event.preventDefault(); // 阻止默认的点击行为，避免直接跳转到锚点
        scrollToAnchor(link);
      })
    );
  });
</script>
