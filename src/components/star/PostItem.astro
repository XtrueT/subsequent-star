---
import FormattedDate from '@components/star/FormattedDate.astro';
import { Image } from 'astro:assets';
import PostAbstract from './PostAbstract.astro';

const { post } = Astro.props;
const { title, description, pubDate, author, heroImage, tags } = post.data;
const href = `/blog/${post.slug}/`;
const isHaveHeroImage = heroImage ? 'col-span-2' : 'col-span-full';
const { Content } = await post.render();
---

<article class='break-all py-1'>
  <div class='grid grid-cols-3 gap-2 items-center'>
    {
      heroImage && (
        <a href={href} title={title}>
          <figure id='heroImage' class='size-full h-24 lg:h-36'>
            <Image
              src={heroImage}
              alt={title}
              loading='lazy'
              width='256'
              height='144'
              class='rounded-md object-fit lg:hover:scale-110 h-24 lg:h-36'
            />
          </figure>
        </a>
      )
    }
    <div class:list={['grid grid-cols-1 gap-2 size-full', isHaveHeroImage]}>
      <h2>
        <a href={href} class='font-bold'>
          {title}
        </a>
        <p class='text-gray-500 text-xs'>
          <span>{author}</span>
          <span><FormattedDate date={pubDate} /></span>
          <span>发布于</span>
          {
            tags.map((tag) => (
              <a href={`/tags/${tag}`}>
                <span class='tag'>#{tag}</span>
              </a>
            ))
          }
        </p>
      </h2>
      {
        description ? (
          `${description.substring(0, 60)}...`
        ) : (
          <PostAbstract>
            <Content />
          </PostAbstract>
        )
      }
    </div>
  </div>
</article>
